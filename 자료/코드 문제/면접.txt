스택
후입 선출 LIFO
UI작업을 할때 팝업창이 많이 열려있을경우 Esc를 사용해서 가장 마지막에 열린것을 닫게 할때 스택을 많이 사용하였습니다.

큐
선입 선출 LILO

총알 관리 리스트

쿼드트리/옥트리 재귀 호출로 인해 작업자체가 비용이 비싸다.

박싱, 언박싱
G.C = Garbage Collecter
디자인패턴을 쓰는 이유
최적화 경험 방법
프로파일러 <-사용할줄안다!
1. 메모리 -(최소한)- x -> 텍스쳐(1순위)
2. 라이트맵 - 디렉셔널, 포인트, spot, area
포워드, 디퍼드
렌더링 파이프라인

객체지향 4대 특성
추상화 - 인터페이스 (순수 가상 함수 혹은 추상 함수)
캡슐화 - 접근지정자 - 공개, 비공개 - 정보는 숨기고 공개할 함수만 공개한다 -> 오작동방지(실수 방지)
상속 - 클래스 재사용, 확장이 용이(파생클래스), 중복 코드 방지
다향성 - 가상 함수

객체지향 5원칙 SOLID
단일 책임 - 한가지의 기능만 하도록 설계, 복합적인 기능은 조합으로 구현
개방 폐쇄 - 확장에는 열려있고 수정에는 닫혀 있어야 한다.
리스코프 치환 - 자식은 부모를 모두 포함해야 한다.
인터페이스 분리 - 작은 인터페이스를 조합해서 만들어라
의존 관계 역전 - 자식에 의존하지 마라

쓰레드 장단점 - 데드락현상
쓰레드 프로세스 정의
유한상태기계
유니티 배치스 - 드로우콜 (렌더링 파이프 라인이 가동) - 인스턴싱 - 한방에 몰아 그리기(같은 매트리얼을 사용해야한다)
- 애니메이티드 버텍스 정보를 처리를 못한다.(스킨드메쉬렌더러는 인스턴싱을 할 수 없다.)

github svn - commit, push(update)
UML - 동합언어모델
정렬코드
이중버퍼링

